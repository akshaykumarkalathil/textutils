{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-practice\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const showAlert = (msg, type) => {\n    setalert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"#0b2e4c\";\n      showAlert(\"Dark Mode Enabled Successfully\", \"success\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled Successfully\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutTitle: \"About Us\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        enterText: \"Enter the text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"j9+E8TPjhC9NMuOxBjdRMkvncRU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","Navbar","TextForm","App","mode","setmode","alert","setalert","showAlert","msg","type","setTimeout","toggleMode","document","body","style","backgroundColor"],"sources":["D:/react-practice/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nfunction App() {\n  const [mode,setmode] = useState(\"light\");\n  const [alert,setalert] = useState(null);\n\n  const showAlert = (msg, type)=>{\n    setalert({\n      msg : msg,\n      type : type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if (mode==='light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"#0b2e4c\";\n      showAlert(\"Dark Mode Enabled Successfully\",\"success\");\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled Successfully\",\"success\");\n    }\n  }\n\n  return (\n  <>\n    <Navbar title=\"TextUtils\" aboutTitle=\"About Us\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert} />\n    <div className=\"container\">\n      <TextForm enterText=\"Enter the text to analyze\" mode={mode} />\n      {/* <About/> */}\n    </div>\n    \n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAAA;AAE7C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACO,KAAK,EAACC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMS,SAAS,GAAG,CAACC,GAAG,EAAEC,IAAI,KAAG;IAC7BH,QAAQ,CAAC;MACPE,GAAG,EAAGA,GAAG;MACTC,IAAI,EAAGA;IACT,CAAC,CAAC;IACFC,UAAU,CAAC,MAAM;MACfJ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMK,UAAU,GAAG,MAAI;IACrB,IAAIR,IAAI,KAAG,OAAO,EAAE;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CR,SAAS,CAAC,gCAAgC,EAAC,SAAS,CAAC;IACvD,CAAC,MAAI;MACHH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,iCAAiC,EAAC,SAAS,CAAC;IACxD;EACF,CAAC;EAED,oBACA;IAAA,wBACE,QAAC,MAAM;MAAC,KAAK,EAAC,WAAW;MAAC,UAAU,EAAC,UAAU;MAAC,IAAI,EAAEJ,IAAK;MAAC,UAAU,EAAEQ;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACtF,QAAC,KAAK;MAAC,KAAK,EAAEN;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACvB;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB,QAAC,QAAQ;QAAC,SAAS,EAAC,2BAA2B;QAAC,IAAI,EAAEF;MAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAE1D;EAAA,gBAEL;AAEL;AAAC,GArCQD,GAAG;AAAA,KAAHA,GAAG;AAuCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}