{"ast":null,"code":"import _slicedToArray from \"D:\\\\react-practice\\\\textutils\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\react-practice\\\\textutils\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nvar router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/React.createElement(TextForm, {\n    enterText: \"Enter the text to analyze\",\n    mode: mode,\n    showAlert: showAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }\n  }),\n  errorElement: /*#__PURE__*/React.createElement(ErrorPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }\n  })\n}, {\n  path: \"about\",\n  element: /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }\n  })\n}]);\nfunction App() {\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    mode = _useState2[0],\n    setmode = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    alert = _useState4[0],\n    setalert = _useState4[1];\n  var showAlert = function showAlert(msg, type) {\n    setalert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(function () {\n      setalert(null);\n    }, 1500);\n  };\n  var toggleMode = function toggleMode() {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"#0b2e4c\";\n      showAlert(\"Dark Mode Enabled Successfully\", \"success\");\n      document.title = 'TextUtils - Dark mode';\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled Successfully\", \"success\");\n      document.title = 'TextUtils - Light mode';\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    title: \"TextUtils\",\n    aboutTitle: \"About Us\",\n    mode: mode,\n    toggleMode: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","Alert","About","Navbar","TextForm","createBrowserRouter","RouterProvider","router","path","element","mode","showAlert","errorElement","App","setmode","alert","setalert","msg","type","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["D:/react-practice/textutils/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <TextForm enterText=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} />,\n    errorElement: <ErrorPage />,\n  },\n  {\n    path: \"about\",\n    element: <About />,\n  },\n]);\n\nfunction App() {\n  const [mode,setmode] = useState(\"light\");\n  const [alert,setalert] = useState(null);\n\n  const showAlert = (msg, type)=>{\n    setalert({\n      msg : msg,\n      type : type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if (mode==='light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"#0b2e4c\";\n      showAlert(\"Dark Mode Enabled Successfully\",\"success\");\n      document.title = 'TextUtils - Dark mode';\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled Successfully\",\"success\");\n      document.title = 'TextUtils - Light mode';\n    }\n  }\n\n  return (\n  <>\n    <Navbar title=\"TextUtils\" aboutTitle=\"About Us\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert} />\n    <div className=\"container\">\n    </div>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SACEC,mBAAmB,EACnBC,cAAc,QACT,kBAAkB;AAEzB,IAAMC,MAAM,GAAGF,mBAAmB,CAAC,CACjC;EACEG,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,oBAAC,QAAQ;IAAC,SAAS,EAAC,2BAA2B;IAAC,IAAI,EAAEC,IAAK;IAAC,SAAS,EAAEC,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;EAC7FC,YAAY,eAAE,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA;AAC1B,CAAC,EACD;EACEJ,IAAI,EAAE,OAAO;EACbC,OAAO,eAAE,oBAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA;AACjB,CAAC,CACF,CAAC;AAEF,SAASI,GAAG,GAAG;EAAA,gBACUb,QAAQ,CAAC,OAAO,CAAC;IAAA;IAAjCU,IAAI;IAACI,OAAO;EAAA,iBACMd,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAhCe,KAAK;IAACC,QAAQ;EAErB,IAAML,SAAS,GAAG,SAAZA,SAAS,CAAIM,GAAG,EAAEC,IAAI,EAAG;IAC7BF,QAAQ,CAAC;MACPC,GAAG,EAAGA,GAAG;MACTC,IAAI,EAAGA;IACT,CAAC,CAAC;IACFC,UAAU,CAAC,YAAM;MACfH,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,IAAMI,UAAU,GAAG,SAAbA,UAAU,GAAO;IACrB,IAAIV,IAAI,KAAG,OAAO,EAAE;MAClBI,OAAO,CAAC,MAAM,CAAC;MACfO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/Cb,SAAS,CAAC,gCAAgC,EAAC,SAAS,CAAC;MACrDU,QAAQ,CAACI,KAAK,GAAG,uBAAuB;IAC1C,CAAC,MAAI;MACHX,OAAO,CAAC,OAAO,CAAC;MAChBO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7Cb,SAAS,CAAC,iCAAiC,EAAC,SAAS,CAAC;MACtDU,QAAQ,CAACI,KAAK,GAAG,wBAAwB;IAC3C;EACF,CAAC;EAED,oBACA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAM;IAAC,KAAK,EAAC,WAAW;IAAC,UAAU,EAAC,UAAU;IAAC,IAAI,EAAEf,IAAK;IAAC,UAAU,EAAEU,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACtF,oBAAC,KAAK;IAAC,KAAK,EAAEL,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACvB;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACpB,CACL;AAEL;AAEA,eAAeF,GAAG"},"metadata":{},"sourceType":"module"}